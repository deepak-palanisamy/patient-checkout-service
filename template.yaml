AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    demo-patient-svc
    
    Sample SAM Template for demo-patient-svc

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        CodeUri: patient-checkout-service
        Timeout: 40
        Runtime: java11
        MemorySize: 256

Resources:
    PatientCheckOutDLQueue:
        Type: AWS::SNS::Topic
    PatientCheckOutBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: !Sub ${AWS::StackName}-${AWS::AccountId}-${AWS::Region}
    PatientCheckOutSnsTopic:
        Type: AWS::SNS::Topic
    PatientCheckOutFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            Handler: net.breezeware.propel.patientcheckoutservice.apis.PatientCheckOutLambda::checkout
            DeadLetterQueue:
                Type: SQS
                TargetArn: !Ref PatientCheckOutDLQueue
            Architectures:
                - x86_64
            Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
                Variables:
                    PATIENT_CHECKOUT_TOPIC: !Ref PatientCheckOutSnsTopic
            #                    JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1 # More info about tiered compilation https://aws.amazon.com/blogs/compute/optimizing-aws-lambda-function-performance-for-java/
            Policies:
                -   S3ReadPolicy:
                        BucketName: !Sub ${AWS::StackName}-${AWS::AccountId}-${AWS::Region}
                -   SNSPublishMessagePolicy:
                        TopicName:
                            - !GetAtt PatientCheckOutSnsTopic.TopicName
                -   SNSPublishMessagePolicy:
                        TopicName:
                            - !GetAtt PatientCheckOutDLQueue.TopicName
            Events:
                S3Event:
                    Type: S3 # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Bucket: !Ref PatientCheckOutBucket
                        Events: s3:ObjectCreated:*
    BillManagementFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            Handler: net.breezeware.propel.patientcheckoutservice.apis.BillManagementLambda::manage
            Architectures:
                - x86_64
            Events:
                SnsEvent:
                    Type: SNS # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Topic: !Ref PatientCheckOutSnsTopic
    DLQErrorHandlingFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            Handler: net.breezeware.propel.patientcheckoutservice.apis.DLQEventLambda::execute
            Architectures:
                - x86_64
            Events:
                SnsEvent:
                    Type: SNS # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Topic: !Ref PatientCheckOutDLQueue

#Outputs:
#  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#  # Find out more about other implicit resources you can reference within SAM
#  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#  HelloWorldApi:
#    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#  HelloWorldFunction:
#    Description: "Hello World Lambda Function ARN"
#    Value: !GetAtt HelloWorldFunction.Arn
#  HelloWorldFunctionIamRole:
#    Description: "Implicit IAM Role created for Hello World function"
#    Value: !GetAtt HelloWorldFunctionRole.Arn
